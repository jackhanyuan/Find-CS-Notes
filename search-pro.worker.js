const rt="ENTRIES",W="KEYS",$="VALUES",F="";class M{constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=C(this._path);if(C(s)===F)return{done:!1,value:this.result()};const n=t.get(C(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=C(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>C(t)).filter(t=>t!==F).join("")}value(){return C(this._path).node.get(F)}result(){switch(this._type){case $:return this.value();case W:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const C=e=>e[e.length-1],ct=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const h=o*i;t:for(const c of e.keys())if(c===F){const a=u[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=o;for(let l=0;l<c.length;++l,++a){const m=c[l],g=i*a,f=g-i;let d=u[g];const p=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let A=p;A<_;++A){const O=m!==t[A],x=u[f+A]+ +O,y=u[f+A+1]+1,k=u[g+A]+1,T=u[g+A+1]=Math.min(x,y,k);T<d&&(d=T)}if(d>s)continue t}R(e.get(c),t,s,n,u,a,i,r+c)}};let q=class w{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=v(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=j(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new w(r,t)}}return new w(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,lt(this._tree,t)}entries(){return new M(this,rt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ct(this._tree,t,s)}get(t){const s=B(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=B(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new M(this,W)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,S(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=S(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=S(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new M(this,$)}[Symbol.iterator](){return this.entries()}static from(t){const s=new w;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return w.from(Object.entries(t))}};const v=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),v(e.get(n),t.slice(n.length),s);return s.push([e,t]),v(void 0,"",s)},B=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return B(e.get(s),t.slice(s.length))},S=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const h=e.get(o);if(r===o.length)e=h;else{const c=new Map;c.set(o.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(o),e=c}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},lt=(e,t)=>{const[s,n]=v(e,t);if(s!==void 0){if(s.delete(F),s.size===0)P(n);else if(s.size===1){const[u,o]=s.entries().next().value;N(n,u,o)}}},P=e=>{if(e.length===0)return;const[t,s]=j(e);if(t.delete(s),t.size===0)P(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&N(e.slice(0,-1),n,u)}},N=(e,t,s)=>{if(e.length===0)return;const[n,u]=j(e);n.set(u+t,s),n.delete(u)},j=e=>e[e.length-1],ht=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,L="or",G="and",dt="and_not",at=(e,t)=>{e.includes(t)||e.push(t)},J=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},U=({score:e},{score:t})=>t-e,ft=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},H=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,gt={[L]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),J(n.terms,o)}}return e},[G]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);J(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[dt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},pt=(e,t,s,n,u,o)=>{const{k:i,b:r,d:h}=o;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/u)))},mt=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},Ft={k:1.2,b:.7,d:.5},_t={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ht),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},K={combineWith:L,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:Ft},At={combineWith:G,prefix:(e,t,s)=>t===s.length-1},yt={batchSize:1e3,batchWait:10},X={minDirtFactor:.1,minDirtCount:20},Ct={...yt,...X};class zt{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ct:t.autoVacuum;this._options={..._t,...t,autoVacuum:s,searchOptions:{...K,...t.searchOptions||{}},autoSuggestOptions:{...At,...t.autoSuggestOptions||{}}},this._index=new q,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=X,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const Y=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},Q=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},Et=(e,t,s,n)=>{if(!e._index.has(n)){Q(e,s,t,n);return}const u=e._index.fetch(n,ft),o=u.get(t);o==null||o.get(s)==null?Q(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Z=(e,t=L)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(gt[s])||new Map},V=(e,t,s,n,u,o,i,r,h=new Map)=>{if(u==null)return h;for(const c of Object.keys(o)){const a=o[c],l=e._fieldIds[c],m=u.get(l);if(m==null)continue;let g=m.size;const f=e._avgFieldLength[l];for(const d of m.keys()){if(!e._documentIds.has(d)){Et(e,l,d,s),g-=1;continue}const p=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!p)continue;const _=m.get(d),A=e._fieldLength.get(d)[l],O=pt(_,g,e._documentCount,A,f,r),x=n*a*p*O,y=h.get(d);if(y){y.score+=x,at(y.terms,t);const k=H(y.match,s);k?k.push(c):y.match[s]=[c]}else h.set(d,{score:x,terms:[t],match:{[s]:[c]}})}}return h},wt=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((d,p)=>({...d,[p]:H(n.boost,p)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...K.weights,...i},l=e._index.get(t.term),m=V(e,t.term,t.term,1,l,u,o,h);let g,f;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,p=d<1?Math.min(r,Math.round(t.term.length*d)):d;p&&(f=e._index.fuzzyGet(t.term,p))}if(g)for(const[d,p]of g){const _=d.length-t.term.length;if(!_)continue;f==null||f.delete(d);const A=a*d.length/(d.length+.3*_);V(e,t.term,d,A,p,u,o,h,m)}if(f)for(const d of f.keys()){const[p,_]=f.get(d);if(!_)continue;const A=c*d.length/(d.length+_);V(e,t.term,d,A,p,u,o,h,m)}return m},tt=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(m=>tt(e,m,a));return Z(l,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(mt(i)).map(a=>wt(e,a,i));return Z(c,i.combineWith)},et=(e,t,s={})=>{const n=tt(e,t,s),u=[];for(const[o,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(o),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(U),u},xt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of et(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=o,h.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:h}]of n)u.push({suggestion:o,terms:r,score:i/h});return u.sort(U),u},kt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new zt(a);l._documentCount=t,l._nextId=s,l._documentIds=b(n),l._idToShortId=new Map,l._fieldIds=u,l._fieldLength=b(o),l._avgFieldLength=i,l._storedFields=b(r),l._dirtCount=h||0,l._index=new q;for(const[m,g]of l._documentIds)l._idToShortId.set(g,m);for(const[m,g]of e){const f=new Map;for(const d of Object.keys(g)){let p=g[d];c===1&&(p=p.ds),f.set(parseInt(d,10),b(p))}l._index.set(m,f)}return l},st=Object.entries,vt=Object.fromEntries,z=100,E=20,D=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>E?`… ${c.slice(-E)}`:c:a?l=c.length+i>z?`${c.slice(0,z-i)}… `:c:l=c.length>E?`${c.slice(0,E)} … ${c.slice(-E)}`:c,l&&u.push(l),i+=l.length,a||(u.push(["mark",t]),i+=t.length,i>=z&&u.push(" …"))};let h=s.indexOf(n,o);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(o,h)),o=c,i>z)break;h=s.indexOf(n,o)}return i<z&&r(e.slice(o),!0),u},nt=/[\u4e00-\u9fa5]/g,ut=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(nt)||[],n=t.replace(nt,"").toLowerCase();return n?[n,...s]:[...s]},...e}),ot=(e,t,s={})=>{const n={};return et(t,e,ut({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,h=o.includes("/"),c=!h&&o.includes("#"),a=o.includes("@"),[l,m]=o.split(/[#@]/),{contents:g}=n[l]??={title:"",contents:[]};if(c)g.push([{type:"heading",key:l,anchor:u.a,display:i.map(f=>D(u.h,f)).filter(f=>f!==null)},r]);else if(h){const[f]=m.split("/"),{h:d="",a:p=""}=Y(t,`${l}#${f}`)||{};g.push([{type:"text",key:l,header:d,anchor:p,display:i.map(_=>D(u.t,_)).filter(_=>_!==null)},r])}else a?g.push([{type:"customField",key:l,index:m,display:i.map(f=>u.c.map(d=>D(d,f))).flat().filter(f=>f!==null)},r]):g.push([{type:"title",key:l,display:i.map(f=>D(u.h,f)).filter(f=>f!==null)},r])}),st(n).sort(([,u],[,o])=>o.contents.reduce((i,[,r])=>i+r,0)-u.contents.reduce((i,[,r])=>i+r,0)).map(([u,{title:o,contents:i}])=>{if(!o){const r=Y(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},it=(e,t,s={})=>xt(t,e,ut(s)).map(({suggestion:n})=>n),I=vt(st(JSON.parse("{\"/\":{\"documentCount\":64,\"nextId\":64,\"documentIds\":{\"0\":\"v-70bc2959\",\"1\":\"v-70bc2959#1\",\"2\":\"v-70bc2959#1/0\",\"3\":\"v-70bc2959#1/1\",\"4\":\"v-70bc2959#1/2\",\"5\":\"v-70bc2959#1/3\",\"6\":\"v-70bc2959#1/4\",\"7\":\"v-70bc2959#2\",\"8\":\"v-2d0a8026\",\"9\":\"v-744e6dd4\",\"10\":\"v-38f5ae5e\",\"11\":\"v-38f5ae5e#0/0\",\"12\":\"v-38f5ae5e#0/1\",\"13\":\"v-38f5ae5e#0/2\",\"14\":\"v-38f5ae5e#0/3\",\"15\":\"v-46bbb146\",\"16\":\"v-46bbb146#1\",\"17\":\"v-46bbb146#2\",\"18\":\"v-46bbb146#3\",\"19\":\"v-46bbb146#4\",\"20\":\"v-46bbb146#5\",\"21\":\"v-46bbb146#6\",\"22\":\"v-46bbb146@0\",\"23\":\"v-46bbb146@1\",\"24\":\"v-487089e5\",\"25\":\"v-487089e5#1\",\"26\":\"v-487089e5#2\",\"27\":\"v-487089e5#3\",\"28\":\"v-487089e5#4\",\"29\":\"v-487089e5#5\",\"30\":\"v-487089e5#6\",\"31\":\"v-487089e5#7\",\"32\":\"v-487089e5#8\",\"33\":\"v-487089e5#9\",\"34\":\"v-487089e5@0\",\"35\":\"v-487089e5@1\",\"36\":\"v-4a256284\",\"37\":\"v-4a256284#1\",\"38\":\"v-4a256284#2\",\"39\":\"v-4a256284#3\",\"40\":\"v-4a256284#4\",\"41\":\"v-4a256284#5\",\"42\":\"v-4a256284#6\",\"43\":\"v-4a256284#7\",\"44\":\"v-4a256284#8\",\"45\":\"v-4a256284#9\",\"46\":\"v-4a256284@0\",\"47\":\"v-4a256284@1\",\"48\":\"v-4bda3b23\",\"49\":\"v-4bda3b23#1\",\"50\":\"v-4bda3b23#2\",\"51\":\"v-4bda3b23#3\",\"52\":\"v-4bda3b23#4\",\"53\":\"v-4bda3b23#5\",\"54\":\"v-4bda3b23#6\",\"55\":\"v-4bda3b23#7\",\"56\":\"v-4bda3b23#8\",\"57\":\"v-4bda3b23#9\",\"58\":\"v-4bda3b23#10\",\"59\":\"v-4bda3b23#11\",\"60\":\"v-4bda3b23#12\",\"61\":\"v-4bda3b23@0\",\"62\":\"v-4bda3b23@1\",\"63\":\"v-f2e3287e\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1],\"2\":[null,1],\"3\":[null,7],\"4\":[null,9],\"5\":[null,10],\"6\":[null,14],\"7\":[2],\"8\":[1],\"9\":[1],\"10\":[1],\"11\":[null,1],\"12\":[null,7],\"13\":[null,9],\"14\":[null,10],\"15\":[8],\"16\":[2],\"17\":[1],\"18\":[1],\"19\":[2],\"20\":[1],\"21\":[1],\"22\":[null,null,1],\"23\":[null,null,1],\"24\":[10],\"25\":[2],\"26\":[1],\"27\":[1],\"28\":[2],\"29\":[1],\"30\":[1],\"31\":[2],\"32\":[1],\"33\":[1],\"34\":[null,null,1],\"35\":[null,null,1],\"36\":[10],\"37\":[2],\"38\":[1],\"39\":[1],\"40\":[2],\"41\":[1],\"42\":[1],\"43\":[2],\"44\":[1],\"45\":[1],\"46\":[null,null,1],\"47\":[null,null,1],\"48\":[14],\"49\":[2],\"50\":[1],\"51\":[1],\"52\":[4],\"53\":[1],\"54\":[1],\"55\":[4],\"56\":[1],\"57\":[1],\"58\":[2],\"59\":[1],\"60\":[1],\"61\":[null,null,1],\"62\":[null,null,1],\"63\":[1]},\"averageFieldLength\":[1.9564793194820742,6.095238095238096,0.19667046345287084],\"storedFields\":{\"0\":{\"h\":\"算法\"},\"1\":{\"h\":\"代码随想录\",\"a\":\"代码随想录\"},\"2\":{\"t\":\"刷题列表\"},\"3\":{\"t\":\"Day1 数组 LeetCode 704. 二分查找 27. 移除元素\"},\"4\":{\"t\":\"Day2 数组 LeetCode 977.有序数组的平方 209.长度最小的子数组 59.螺旋矩阵II\"},\"5\":{\"t\":\"Day3 链表 | LeetCode 203.移除链表元素 707.设计链表 206.反转链表\"},\"6\":{\"t\":\"Day4 链表 | LeetCode 24.两两交换链表中的节点 19.删除链表的倒数第N个节点 面试题 02.07. 链表相交 142.环形链表II\"},\"7\":{\"h\":\"LeetCode Hot100\",\"a\":\"leetcode-hot100\"},\"8\":{\"h\":\"计算机基础\"},\"9\":{\"h\":\"前端笔记\"},\"10\":{\"h\":\"代码随想录\"},\"11\":{\"t\":\"60天刷完代码随想录\"},\"12\":{\"t\":\"Day1 数组 LeetCode 704. 二分查找 27. 移除元素\"},\"13\":{\"t\":\"Day2 数组 LeetCode 977.有序数组的平方 209.长度最小的子数组 59.螺旋矩阵II\"},\"14\":{\"t\":\"Day3 链表 | LeetCode 203.移除链表元素 707.设计链表 206.反转链表\"},\"15\":{\"h\":\"Day1 数组 | LeetCode 704. 二分查找 27. 移除元素\"},\"16\":{\"h\":\"704. 二分查找\",\"a\":\"_704-二分查找\"},\"17\":{\"h\":\"思路\",\"a\":\"思路\"},\"18\":{\"h\":\"python代码\",\"a\":\"python代码\"},\"19\":{\"h\":\"27. 移除元素\",\"a\":\"_27-移除元素\"},\"20\":{\"h\":\"思路\",\"a\":\"思路-1\"},\"21\":{\"h\":\"python代码\",\"a\":\"python代码-1\"},\"22\":{\"c\":[\"算法\"]},\"23\":{\"c\":[\"代码随想录\"]},\"24\":{\"h\":\"Day2 数组 | LeetCode 977.有序数组的平方 209.长度最小的子数组 59.螺旋矩阵II\"},\"25\":{\"h\":\"977.有序数组的平方\",\"a\":\"_977-有序数组的平方\"},\"26\":{\"h\":\"思路\",\"a\":\"思路\"},\"27\":{\"h\":\"python代码\",\"a\":\"python代码\"},\"28\":{\"h\":\"209.长度最小的子数组\",\"a\":\"_209-长度最小的子数组\"},\"29\":{\"h\":\"思路\",\"a\":\"思路-1\"},\"30\":{\"h\":\"python代码\",\"a\":\"python代码-1\"},\"31\":{\"h\":\"59.螺旋矩阵II\",\"a\":\"_59-螺旋矩阵ii\"},\"32\":{\"h\":\"思路\",\"a\":\"思路-2\"},\"33\":{\"h\":\"python代码\",\"a\":\"python代码-2\"},\"34\":{\"c\":[\"算法\"]},\"35\":{\"c\":[\"代码随想录\"]},\"36\":{\"h\":\"Day3 链表 | LeetCode 203.移除链表元素 707.设计链表 206.反转链表\"},\"37\":{\"h\":\"203.移除链表元素\",\"a\":\"_203-移除链表元素\"},\"38\":{\"h\":\"思路\",\"a\":\"思路\"},\"39\":{\"h\":\"python代码\",\"a\":\"python代码\"},\"40\":{\"h\":\"707.设计链表\",\"a\":\"_707-设计链表\"},\"41\":{\"h\":\"思路\",\"a\":\"思路-1\"},\"42\":{\"h\":\"python代码\",\"a\":\"python代码-1\"},\"43\":{\"h\":\"206.反转链表\",\"a\":\"_206-反转链表\"},\"44\":{\"h\":\"思路\",\"a\":\"思路-2\"},\"45\":{\"h\":\"python代码\",\"a\":\"python代码-2\"},\"46\":{\"c\":[\"算法\"]},\"47\":{\"c\":[\"代码随想录\"]},\"48\":{\"h\":\"Day4 链表 | LeetCode 24.两两交换链表中的节点 19.删除链表的倒数第N个节点 面试题 02.07. 链表相交 142.环形链表II\"},\"49\":{\"h\":\"24.两两交换链表中的节点\",\"a\":\"_24-两两交换链表中的节点\"},\"50\":{\"h\":\"思路\",\"a\":\"思路\"},\"51\":{\"h\":\"python代码\",\"a\":\"python代码\"},\"52\":{\"h\":\"19.删除链表的倒数第 N 个结点\",\"a\":\"_19-删除链表的倒数第-n-个结点\"},\"53\":{\"h\":\"思路\",\"a\":\"思路-1\"},\"54\":{\"h\":\"python代码\",\"a\":\"python代码-1\"},\"55\":{\"h\":\"面试题 02.07. 链表相交\",\"a\":\"面试题-02-07-链表相交\"},\"56\":{\"h\":\"思路\",\"a\":\"思路-2\"},\"57\":{\"h\":\"python代码\",\"a\":\"python代码-2\"},\"58\":{\"h\":\"142.环形链表II\",\"a\":\"_142-环形链表ii\"},\"59\":{\"h\":\"思路\",\"a\":\"思路-3\"},\"60\":{\"h\":\"python代码\",\"a\":\"python代码-3\"},\"61\":{\"c\":[\"算法\"]},\"62\":{\"c\":[\"代码随想录\"]},\"63\":{\"h\":\"LeetCode\"}},\"dirtCount\":0,\"index\":[[\"个结点\",{\"0\":{\"52\":1}}],[\"n\",{\"0\":{\"52\":1}}],[\"删除链表的倒数第\",{\"0\":{\"52\":1}}],[\"删除链表的倒数第n个节点\",{\"0\":{\"48\":1},\"1\":{\"6\":1}}],[\"python代码\",{\"0\":{\"18\":1,\"21\":1,\"27\":1,\"30\":1,\"33\":1,\"39\":1,\"42\":1,\"45\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1}}],[\"思路\",{\"0\":{\"17\":1,\"20\":1,\"26\":1,\"29\":1,\"32\":1,\"38\":1,\"41\":1,\"44\":1,\"50\":1,\"53\":1,\"56\":1,\"59\":1}}],[\"60天刷完代码随想录\",{\"1\":{\"11\":1}}],[\"前端笔记\",{\"0\":{\"9\":1}}],[\"计算机基础\",{\"0\":{\"8\":1}}],[\"hot100\",{\"0\":{\"7\":1}}],[\"环形链表ii\",{\"0\":{\"48\":1,\"58\":1},\"1\":{\"6\":1}}],[\"142\",{\"0\":{\"48\":1,\"58\":1},\"1\":{\"6\":1}}],[\"19\",{\"0\":{\"48\":1,\"52\":1},\"1\":{\"6\":1}}],[\"07\",{\"0\":{\"48\":1,\"55\":1},\"1\":{\"6\":1}}],[\"02\",{\"0\":{\"48\":1,\"55\":1},\"1\":{\"6\":1}}],[\"面试题\",{\"0\":{\"48\":1,\"55\":1},\"1\":{\"6\":1}}],[\"两两交换链表中的节点\",{\"0\":{\"48\":1,\"49\":1},\"1\":{\"6\":1}}],[\"反转链表\",{\"0\":{\"36\":1,\"43\":1},\"1\":{\"5\":1,\"14\":1}}],[\"设计链表\",{\"0\":{\"36\":1,\"40\":1},\"1\":{\"5\":1,\"14\":1}}],[\"707\",{\"0\":{\"36\":1,\"40\":1},\"1\":{\"5\":1,\"14\":1}}],[\"704\",{\"0\":{\"15\":1,\"16\":1},\"1\":{\"3\":1,\"12\":1}}],[\"移除链表元素\",{\"0\":{\"36\":1,\"37\":1},\"1\":{\"5\":1,\"14\":1}}],[\"移除元素\",{\"0\":{\"15\":1,\"19\":1},\"1\":{\"3\":1,\"12\":1}}],[\"|\",{\"0\":{\"15\":1,\"24\":1,\"36\":1,\"48\":1},\"1\":{\"5\":1,\"6\":1,\"14\":1}}],[\"链表相交\",{\"0\":{\"48\":1,\"55\":1},\"1\":{\"6\":1}}],[\"链表\",{\"0\":{\"36\":1,\"48\":1},\"1\":{\"5\":1,\"6\":1,\"14\":1}}],[\"螺旋矩阵ii\",{\"0\":{\"24\":1,\"31\":1},\"1\":{\"4\":1,\"13\":1}}],[\"59\",{\"0\":{\"24\":1,\"31\":1},\"1\":{\"4\":1,\"13\":1}}],[\"长度最小的子数组\",{\"0\":{\"24\":1,\"28\":1},\"1\":{\"4\":1,\"13\":1}}],[\"24\",{\"0\":{\"48\":1,\"49\":1},\"1\":{\"6\":1}}],[\"206\",{\"0\":{\"36\":1,\"43\":1},\"1\":{\"5\":1,\"14\":1}}],[\"203\",{\"0\":{\"36\":1,\"37\":1},\"1\":{\"5\":1,\"14\":1}}],[\"209\",{\"0\":{\"24\":1,\"28\":1},\"1\":{\"4\":1,\"13\":1}}],[\"27\",{\"0\":{\"15\":1,\"19\":1},\"1\":{\"3\":1,\"12\":1}}],[\"有序数组的平方\",{\"0\":{\"24\":1,\"25\":1},\"1\":{\"4\":1,\"13\":1}}],[\"977\",{\"0\":{\"24\":1,\"25\":1},\"1\":{\"4\":1,\"13\":1}}],[\"day4\",{\"0\":{\"48\":1},\"1\":{\"6\":1}}],[\"day3\",{\"0\":{\"36\":1},\"1\":{\"5\":1,\"14\":1}}],[\"day2\",{\"0\":{\"24\":1},\"1\":{\"4\":1,\"13\":1}}],[\"day1\",{\"0\":{\"15\":1},\"1\":{\"3\":1,\"12\":1}}],[\"二分查找\",{\"0\":{\"15\":1,\"16\":1},\"1\":{\"3\":1,\"12\":1}}],[\"leetcode\",{\"0\":{\"7\":1,\"15\":1,\"24\":1,\"36\":1,\"48\":1,\"63\":1},\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"12\":1,\"13\":1,\"14\":1}}],[\"数组\",{\"0\":{\"15\":1,\"24\":1},\"1\":{\"3\":1,\"4\":1,\"12\":1,\"13\":1}}],[\"刷题列表\",{\"1\":{\"2\":1}}],[\"代码随想录\",{\"0\":{\"1\":1,\"10\":1},\"2\":{\"23\":1,\"35\":1,\"47\":1,\"62\":1}}],[\"算法\",{\"0\":{\"0\":1},\"2\":{\"22\":1,\"34\":1,\"46\":1,\"61\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,kt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(it(t,I[s],n)):e==="search"?self.postMessage(ot(t,I[s],n)):self.postMessage({suggestions:it(t,I[s],n),results:ot(t,I[s],n)})};
//# sourceMappingURL=index.js.map
