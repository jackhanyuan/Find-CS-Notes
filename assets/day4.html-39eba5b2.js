import{_ as h,X as _,Y as v,Z as e,$ as t,a0 as n,a2 as a,a1 as b,a3 as c,D as u}from"./framework-c129f050.js";const m={},p={class:"hint-container tip"},x=e("p",{class:"hint-container-title"},"本文目录",-1),g={class:"table-of-contents"},f=e("h2",{id:"_24-两两交换链表中的节点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_24-两两交换链表中的节点","aria-hidden":"true"},"#"),a(" 24.两两交换链表中的节点")],-1),y={href:"https://leetcode.cn/problems/swap-nodes-in-pairs/",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,"给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。",-1),A=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1,2,3,4]
输出：[2,1,4,3]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),B=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = []
输出：[]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),I=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1]
输出：[1]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),N=c(`<h3 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h3><h3 id="python代码" tabindex="-1"><a class="header-anchor" href="#python代码" aria-hidden="true">#</a> python代码</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_19-删除链表的倒数第-n-个结点" tabindex="-1"><a class="header-anchor" href="#_19-删除链表的倒数第-n-个结点" aria-hidden="true">#</a> 19.删除链表的倒数第 N 个结点</h2>`,4),V={href:"https://leetcode.cn/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"},C=e("p",null,"给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。",-1),q=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1,2,3,4,5], n = 2
输出：[1,2,3,5]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),w=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1], n = 1
输出：[]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),E=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1,2], n = 1
输出：[1]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),T=c(`<h3 id="思路-1" tabindex="-1"><a class="header-anchor" href="#思路-1" aria-hidden="true">#</a> 思路</h3><h3 id="python代码-1" tabindex="-1"><a class="header-anchor" href="#python代码-1" aria-hidden="true">#</a> python代码</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="面试题-02-07-链表相交" tabindex="-1"><a class="header-anchor" href="#面试题-02-07-链表相交" aria-hidden="true">#</a> 面试题 02.07. 链表相交</h2>`,4),L={href:"https://leetcode.cn/problems/intersection-of-two-linked-lists-lcci/",target:"_blank",rel:"noopener noreferrer"},D=e("p",null,"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表没有交点，返回 null 。",-1),S=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3
输出：Intersected at '8'
解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。
从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,0,1,8,4,5]。
在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),X=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：intersectVal = 2, listA = [0,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1
输出：Intersected at '2'
解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。
从各自的表头开始算起，链表 A 为 [0,9,1,2,4]，链表 B 为 [3,2,4]。
在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),Y=c(`<h3 id="思路-2" tabindex="-1"><a class="header-anchor" href="#思路-2" aria-hidden="true">#</a> 思路</h3><h3 id="python代码-2" tabindex="-1"><a class="header-anchor" href="#python代码-2" aria-hidden="true">#</a> python代码</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_142-环形链表ii" tabindex="-1"><a class="header-anchor" href="#_142-环形链表ii" aria-hidden="true">#</a> 142.环形链表II</h2>`,4),Z={href:"https://leetcode.cn/problems/linked-list-cycle-ii/",target:"_blank",rel:"noopener noreferrer"},$=e("p",null,"给定一个链表的头节点  head ，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。",-1),j=e("p",null,[a("如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。如果 pos 是 -1，则在该链表中没有环。"),e("strong",null,"注意：pos 不作为参数进行传递"),a("，仅仅是为了标识链表的实际情况。")],-1),z=e("p",null,[e("strong",null,"不允许修改"),a("链表。")],-1),F=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [3,2,0,-4], pos = 1
输出：返回索引为 1 的链表节点
解释：链表中有一个环，其尾部连接到第二个节点。
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),G=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1,2], pos = 0
输出：返回索引为 0 的链表节点
解释：链表中有一个环，其尾部连接到第一个节点。
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),H=c(`<h3 id="思路-3" tabindex="-1"><a class="header-anchor" href="#思路-3" aria-hidden="true">#</a> 思路</h3><h3 id="python代码-3" tabindex="-1"><a class="header-anchor" href="#python代码-3" aria-hidden="true">#</a> python代码</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3);function J(K,M){const l=u("router-link"),r=u("ExternalLinkIcon"),o=u("CodeTabs");return _(),v("div",null,[e("div",p,[x,e("nav",g,[e("ul",null,[e("li",null,[t(l,{to:"#_24-两两交换链表中的节点"},{default:n(()=>[a("24.两两交换链表中的节点")]),_:1}),e("ul",null,[e("li",null,[t(l,{to:"#思路"},{default:n(()=>[a("思路")]),_:1})]),e("li",null,[t(l,{to:"#python代码"},{default:n(()=>[a("python代码")]),_:1})])])]),e("li",null,[t(l,{to:"#_19-删除链表的倒数第-n-个结点"},{default:n(()=>[a("19.删除链表的倒数第 N 个结点")]),_:1}),e("ul",null,[e("li",null,[t(l,{to:"#思路-1"},{default:n(()=>[a("思路")]),_:1})]),e("li",null,[t(l,{to:"#python代码-1"},{default:n(()=>[a("python代码")]),_:1})])])]),e("li",null,[t(l,{to:"#面试题-02-07-链表相交"},{default:n(()=>[a("面试题 02.07. 链表相交")]),_:1}),e("ul",null,[e("li",null,[t(l,{to:"#思路-2"},{default:n(()=>[a("思路")]),_:1})]),e("li",null,[t(l,{to:"#python代码-2"},{default:n(()=>[a("python代码")]),_:1})])])]),e("li",null,[t(l,{to:"#_142-环形链表ii"},{default:n(()=>[a("142.环形链表II")]),_:1}),e("ul",null,[e("li",null,[t(l,{to:"#思路-3"},{default:n(()=>[a("思路")]),_:1})]),e("li",null,[t(l,{to:"#python代码-3"},{default:n(()=>[a("python代码")]),_:1})])])])])])]),f,e("blockquote",null,[e("p",null,[e("a",y,[a("力扣题目链接"),t(r)])])]),k,t(o,{id:"16",data:[{title:"示例 1："},{title:"示例 2："},{title:"示例 3："}],active:0,"tab-id":"txt"},{tab0:n(({title:i,value:s,isActive:d})=>[A]),tab1:n(({title:i,value:s,isActive:d})=>[B]),tab2:n(({title:i,value:s,isActive:d})=>[I]),_:1}),b(" more "),N,e("blockquote",null,[e("p",null,[e("a",V,[a("力扣题目链接"),t(r)])])]),C,t(o,{id:"46",data:[{title:"示例 1："},{title:"示例 2："},{title:"示例 3："}],active:0,"tab-id":"txt"},{tab0:n(({title:i,value:s,isActive:d})=>[q]),tab1:n(({title:i,value:s,isActive:d})=>[w]),tab2:n(({title:i,value:s,isActive:d})=>[E]),_:1}),T,e("blockquote",null,[e("p",null,[e("a",L,[a("力扣题目链接"),t(r)])])]),D,t(o,{id:"75",data:[{title:"示例 1："},{title:"示例 2："}],active:0,"tab-id":"txt"},{tab0:n(({title:i,value:s,isActive:d})=>[S]),tab1:n(({title:i,value:s,isActive:d})=>[X]),_:1}),Y,e("blockquote",null,[e("p",null,[e("a",Z,[a("力扣题目链接"),t(r)])])]),$,j,z,t(o,{id:"107",data:[{title:"示例 1："},{title:"示例 2："}],active:0,"tab-id":"txt"},{tab0:n(({title:i,value:s,isActive:d})=>[F]),tab1:n(({title:i,value:s,isActive:d})=>[G]),_:1}),H])}const P=h(m,[["render",J],["__file","day4.html.vue"]]);export{P as default};
