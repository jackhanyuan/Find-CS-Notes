import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as h,c as p,a as e,b as a,w as t,e as n,d as v,f as r}from"./app-CHw5kVYW.js";const m={},_={class:"hint-container tip"},b=e("p",{class:"hint-container-title"},"本文目录",-1),g={class:"table-of-contents"},x=e("h2",{id:"_24-两两交换链表中的节点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_24-两两交换链表中的节点"},[e("span",null,"24.两两交换链表中的节点")])],-1),y={href:"https://leetcode.cn/problems/swap-nodes-in-pairs/",target:"_blank",rel:"noopener noreferrer"},f=e("p",null,"给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。",-1),k=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt","data-title":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1,2,3,4]
输出：[2,1,4,3]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),A=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt","data-title":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = []
输出：[]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),I=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt","data-title":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1]
输出：[1]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),N=r(`<h3 id="思路" tabindex="-1"><a class="header-anchor" href="#思路"><span>思路</span></a></h3><h3 id="python代码" tabindex="-1"><a class="header-anchor" href="#python代码"><span>python代码</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_19-删除链表的倒数第-n-个结点" tabindex="-1"><a class="header-anchor" href="#_19-删除链表的倒数第-n-个结点"><span>19.删除链表的倒数第 N 个结点</span></a></h2>`,4),T={href:"https://leetcode.cn/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"},B=e("p",null,"给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。",-1),C=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt","data-title":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1,2,3,4,5], n = 2
输出：[1,2,3,5]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),D=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt","data-title":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1], n = 1
输出：[]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),V=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt","data-title":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1,2], n = 1
输出：[1]
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),L=r(`<h3 id="思路-1" tabindex="-1"><a class="header-anchor" href="#思路-1"><span>思路</span></a></h3><h3 id="python代码-1" tabindex="-1"><a class="header-anchor" href="#python代码-1"><span>python代码</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="面试题-02-07-链表相交" tabindex="-1"><a class="header-anchor" href="#面试题-02-07-链表相交"><span>面试题 02.07. 链表相交</span></a></h2>`,4),Z={href:"https://leetcode.cn/problems/intersection-of-two-linked-lists-lcci/",target:"_blank",rel:"noopener noreferrer"},w=e("p",null,"给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表没有交点，返回 null 。",-1),q=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt","data-title":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3
输出：Intersected at '8'
解释：相交节点的值为 8 （注意，如果两个链表相交则不能为 0）。
从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,0,1,8,4,5]。
在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),j=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt","data-title":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：intersectVal = 2, listA = [0,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1
输出：Intersected at '2'
解释：相交节点的值为 2 （注意，如果两个链表相交则不能为 0）。
从各自的表头开始算起，链表 A 为 [0,9,1,2,4]，链表 B 为 [3,2,4]。
在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),z=r(`<h3 id="思路-2" tabindex="-1"><a class="header-anchor" href="#思路-2"><span>思路</span></a></h3><h3 id="python代码-2" tabindex="-1"><a class="header-anchor" href="#python代码-2"><span>python代码</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_142-环形链表ii" tabindex="-1"><a class="header-anchor" href="#_142-环形链表ii"><span>142.环形链表II</span></a></h2>`,4),E={href:"https://leetcode.cn/problems/linked-list-cycle-ii/",target:"_blank",rel:"noopener noreferrer"},P=e("p",null,"给定一个链表的头节点  head ，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。",-1),S=e("p",null,[n("如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。如果 pos 是 -1，则在该链表中没有环。"),e("strong",null,"注意：pos 不作为参数进行传递"),n("，仅仅是为了标识链表的实际情况。")],-1),F=e("p",null,[e("strong",null,"不允许修改"),n("链表。")],-1),J=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt","data-title":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [3,2,0,-4], pos = 1
输出：返回索引为 1 的链表节点
解释：链表中有一个环，其尾部连接到第二个节点。
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),M=e("div",{class:"language-txt line-numbers-mode","data-ext":"txt","data-title":"txt"},[e("pre",{class:"language-txt"},[e("code",null,`输入：head = [1,2], pos = 0
输出：返回索引为 0 的链表节点
解释：链表中有一个环，其尾部连接到第一个节点。
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),O=r(`<h3 id="思路-3" tabindex="-1"><a class="header-anchor" href="#思路-3"><span>思路</span></a></h3><h3 id="python代码-3" tabindex="-1"><a class="header-anchor" href="#python代码-3"><span>python代码</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3);function R(G,H){const s=c("router-link"),d=c("ExternalLinkIcon"),o=c("CodeTabs");return h(),p("div",null,[e("div",_,[b,e("nav",g,[e("ul",null,[e("li",null,[a(s,{to:"#_24-两两交换链表中的节点"},{default:t(()=>[n("24.两两交换链表中的节点")]),_:1}),e("ul",null,[e("li",null,[a(s,{to:"#思路"},{default:t(()=>[n("思路")]),_:1})]),e("li",null,[a(s,{to:"#python代码"},{default:t(()=>[n("python代码")]),_:1})])])]),e("li",null,[a(s,{to:"#_19-删除链表的倒数第-n-个结点"},{default:t(()=>[n("19.删除链表的倒数第 N 个结点")]),_:1}),e("ul",null,[e("li",null,[a(s,{to:"#思路-1"},{default:t(()=>[n("思路")]),_:1})]),e("li",null,[a(s,{to:"#python代码-1"},{default:t(()=>[n("python代码")]),_:1})])])]),e("li",null,[a(s,{to:"#面试题-02-07-链表相交"},{default:t(()=>[n("面试题 02.07. 链表相交")]),_:1}),e("ul",null,[e("li",null,[a(s,{to:"#思路-2"},{default:t(()=>[n("思路")]),_:1})]),e("li",null,[a(s,{to:"#python代码-2"},{default:t(()=>[n("python代码")]),_:1})])])]),e("li",null,[a(s,{to:"#_142-环形链表ii"},{default:t(()=>[n("142.环形链表II")]),_:1}),e("ul",null,[e("li",null,[a(s,{to:"#思路-3"},{default:t(()=>[n("思路")]),_:1})]),e("li",null,[a(s,{to:"#python代码-3"},{default:t(()=>[n("python代码")]),_:1})])])])])])]),x,e("blockquote",null,[e("p",null,[e("a",y,[n("力扣题目链接"),a(d)])])]),f,a(o,{id:"16",data:[{id:"示例 1："},{id:"示例 2："},{id:"示例 3："}],active:0,"tab-id":"txt"},{title0:t(({value:l,isActive:i})=>[n("示例 1：")]),title1:t(({value:l,isActive:i})=>[n("示例 2：")]),title2:t(({value:l,isActive:i})=>[n("示例 3：")]),tab0:t(({value:l,isActive:i})=>[k]),tab1:t(({value:l,isActive:i})=>[A]),tab2:t(({value:l,isActive:i})=>[I]),_:1}),v(" more "),N,e("blockquote",null,[e("p",null,[e("a",T,[n("力扣题目链接"),a(d)])])]),B,a(o,{id:"46",data:[{id:"示例 1："},{id:"示例 2："},{id:"示例 3："}],active:0,"tab-id":"txt"},{title0:t(({value:l,isActive:i})=>[n("示例 1：")]),title1:t(({value:l,isActive:i})=>[n("示例 2：")]),title2:t(({value:l,isActive:i})=>[n("示例 3：")]),tab0:t(({value:l,isActive:i})=>[C]),tab1:t(({value:l,isActive:i})=>[D]),tab2:t(({value:l,isActive:i})=>[V]),_:1}),L,e("blockquote",null,[e("p",null,[e("a",Z,[n("力扣题目链接"),a(d)])])]),w,a(o,{id:"75",data:[{id:"示例 1："},{id:"示例 2："}],active:0,"tab-id":"txt"},{title0:t(({value:l,isActive:i})=>[n("示例 1：")]),title1:t(({value:l,isActive:i})=>[n("示例 2：")]),tab0:t(({value:l,isActive:i})=>[q]),tab1:t(({value:l,isActive:i})=>[j]),_:1}),z,e("blockquote",null,[e("p",null,[e("a",E,[n("力扣题目链接"),a(d)])])]),P,S,F,a(o,{id:"107",data:[{id:"示例 1："},{id:"示例 2："}],active:0,"tab-id":"txt"},{title0:t(({value:l,isActive:i})=>[n("示例 1：")]),title1:t(({value:l,isActive:i})=>[n("示例 2：")]),tab0:t(({value:l,isActive:i})=>[J]),tab1:t(({value:l,isActive:i})=>[M]),_:1}),O])}const U=u(m,[["render",R],["__file","day4.html.vue"]]),W=JSON.parse('{"path":"/algorithm/carl/day4.html","title":"Day4 链表 | LeetCode 24.两两交换链表中的节点 19.删除链表的倒数第N个节点 面试题 02.07. 链表相交 142.环形链表II","lang":"zh-CN","frontmatter":{"title":"Day4 链表 | LeetCode 24.两两交换链表中的节点 19.删除链表的倒数第N个节点 面试题 02.07. 链表相交 142.环形链表II","shortTitle":"Day4 链表","date":"2022-11-29T00:00:00.000Z","category":["算法"],"tag":["代码随想录"],"excerpt":"<br>","order":4,"prev":"day3","next":null,"description":" 本文目录 24.两两交换链表中的节点 力扣题目链接 给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。 思路 python代码 19.删除链表的倒数第 N 个结点 力扣题目链接 给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。 思路 python代码 ...","head":[["meta",{"property":"og:url","content":"https://findn.cn/algorithm/carl/day4.html"}],["meta",{"property":"og:site_name","content":"Find Notes"}],["meta",{"property":"og:title","content":"Day4 链表 | LeetCode 24.两两交换链表中的节点 19.删除链表的倒数第N个节点 面试题 02.07. 链表相交 142.环形链表II"}],["meta",{"property":"og:description","content":" 本文目录 24.两两交换链表中的节点 力扣题目链接 给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。 思路 python代码 19.删除链表的倒数第 N 个结点 力扣题目链接 给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。 思路 python代码 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-29T09:19:15.000Z"}],["meta",{"property":"article:author","content":"三水"}],["meta",{"property":"article:tag","content":"代码随想录"}],["meta",{"property":"article:published_time","content":"2022-11-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-29T09:19:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Day4 链表 | LeetCode 24.两两交换链表中的节点 19.删除链表的倒数第N个节点 面试题 02.07. 链表相交 142.环形链表II\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-29T00:00:00.000Z\\",\\"dateModified\\":\\"2022-11-29T09:19:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"三水\\",\\"url\\":\\"https://sanshui.findn.cn/\\"}]}"]]},"headers":[{"level":2,"title":"24.两两交换链表中的节点","slug":"_24-两两交换链表中的节点","link":"#_24-两两交换链表中的节点","children":[{"level":3,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":3,"title":"python代码","slug":"python代码","link":"#python代码","children":[]}]},{"level":2,"title":"19.删除链表的倒数第 N 个结点","slug":"_19-删除链表的倒数第-n-个结点","link":"#_19-删除链表的倒数第-n-个结点","children":[{"level":3,"title":"思路","slug":"思路-1","link":"#思路-1","children":[]},{"level":3,"title":"python代码","slug":"python代码-1","link":"#python代码-1","children":[]}]},{"level":2,"title":"面试题 02.07. 链表相交","slug":"面试题-02-07-链表相交","link":"#面试题-02-07-链表相交","children":[{"level":3,"title":"思路","slug":"思路-2","link":"#思路-2","children":[]},{"level":3,"title":"python代码","slug":"python代码-2","link":"#python代码-2","children":[]}]},{"level":2,"title":"142.环形链表II","slug":"_142-环形链表ii","link":"#_142-环形链表ii","children":[{"level":3,"title":"思路","slug":"思路-3","link":"#思路-3","children":[]},{"level":3,"title":"python代码","slug":"python代码-3","link":"#python代码-3","children":[]}]}],"git":{"createdTime":1669713555000,"updatedTime":1669713555000,"contributors":[{"name":"jackhanyuan","email":"jackhanyuan@foxmail.com","commits":1}]},"readingTime":{"minutes":2.96,"words":888},"filePathRelative":"algorithm/carl/day4.md","localizedDate":"2022年11月29日","autoDesc":true}');export{U as comp,W as data};
